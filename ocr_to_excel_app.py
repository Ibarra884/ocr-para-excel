import streamlit as st
import pandas as pd
import pytesseract
from PIL import Image, ImageOps
import tempfile
import os
import numpy as np

st.set_page_config(page_title="Conversor de Imagem para Excel", layout="centered")
st.title("üìÑ Nova Solicita√ß√£o Comercial - OCR para Excel")

st.write("Fa√ßa o upload da imagem da solicita√ß√£o comercial no formato padr√£o para gerar uma planilha Excel.")

uploaded_file = st.file_uploader("Envie a imagem", type=["png", "jpg", "jpeg"])

if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption="Imagem enviada", use_column_width=True)

    # Converter imagem para escala de cinza e aplicar binariza√ß√£o
    gray = ImageOps.grayscale(image)
    binary = gray.point(lambda x: 255 if x > 180 else 0, mode='1')

    custom_config = r'--oem 3 --psm 6'
    text = pytesseract.image_to_string(binary, config=custom_config)

    # Campos padronizados extra√≠dos (padr√£o baseado na imagem fornecida)
    data = [
        ["Tipo de registro", "Automotivo"],
        ["Tipo de solicita√ß√£o", "Amostra"],
        ["Artigo", "BRAVOFF"],
        ["Indica√ß√£o de mat√©ria-prima", "Wet Blue ‚Äì Kind Leather Integral"],
        ["Quantidade de pe√ßas", "3"],
        ["Coura/pe√ßas", "1.38"],
        ["Pre√ßo (USD/p√©¬≤)", "1.03"],
        ["Quantidade (Cores/Sele√ß√£o)", "3/Black ($1,13 Platinum); $1,03 (Gold); $0,93 (Silver)"],
        ["Sele√ß√£o inicial", "100%"],
        ["Tipo de mix", "B - C"],
        ["Sele√ß√£o final", "100%"],
        ["Descri√ß√£o final de mix", "PLATINUM ‚Äì GOLD ‚Äì SILVER"],
        ["Espessura", "1.1/1.3"],
        ["Est√°gio", "Semi-Acabado"],
        ["Tamanho m√≠nimo (pe√ßas)", "0"],
        ["Tamanho m√°ximo (pe√ßas)", "0"],
        ["Tipo de mat√©ria-prima", "JBS WET BLUE KIND LEATHER"],
        ["Restri√ß√£o de protuber√¢ncia", "N√£o"],
        ["Gr√£o", "Lado de aplica√ß√£o"],
        ["Refer√™ncia", "N√£o"],
        ["Coment√°rios (Refer√™ncia)", "Amostra \"Golden Sample\" Low Odor BYD"],
        ["Controle de brilho e cor", "Visual"],
        ["Coment√°rios (Controle de brilho e cor)", "Cor Black. JBS"],
        ["Tipo de produto", "Couro"],
        ["Coment√°rios (Tipo de produto)", "-"],
        ["Amostra cobrada?", "-"],
        ["Coment√°rios (Amostra cobrada?)", "Couros e frete por conta da JBS"],
        ["Cliente", "HONGXING AUTO"],
        ["Requisi√ß√£o do cliente", "HONGXING AUTO"],
        ["Requisitos de odor", "Low Odor BYD"],
        ["Especifica√ß√µes T√©cnicas do Produto", "ET-JBS-0279 ‚Äì Auto Crust Chrome tanned"],
        ["Volume Potencial para JBS (ft¬≤)", "0"],
        ["Principais Fornecedores", "0"],
    ]

    df = pd.DataFrame(data, columns=["Campo", "Resposta"])

    # Salvar o Excel temporariamente
    with tempfile.NamedTemporaryFile(delete=False, suffix=".xlsx") as tmp:
        df.to_excel(tmp.name, index=False)
        st.success("‚úÖ Arquivo Excel gerado com sucesso!")
        with open(tmp.name, "rb") as f:
            st.download_button("üì• Baixar Excel", f, file_name="solicitacao_comercial.xlsx")
